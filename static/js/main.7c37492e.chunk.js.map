{"version":3,"sources":["firebase.js","todos.jsx","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","firestore","functions","DetailButton","styled","Button","background","Todo","id","complete","text","todosRef","collection","currentUser","uid","className","onClick","doc","set","merge","onCompleteTodo","delete","onDeleteTodo","Todos","useState","todo","setTodo","useCollectionData","orderBy","idField","todos","variant","size","color","signOut","onSubmit","evt","preventDefault","add","createdAt","FieldValue","serverTimestamp","TextField","required","value","onChange","target","label","type","map","googleSignIn","signInWithPopup","GoogleAuthProvider","SignIn","App","useAuthState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7c37492e.chunk.js","sourcesContent":["import firebase from 'firebase/app'\n\nimport 'firebase/firestore'\nimport 'firebase/auth'\nimport 'firebase/functions'\n\nfirebase.initializeApp({\n    apiKey: \"AIzaSyCqhfqVGf8h1a7QPfQPqTuR1QeDo5DVepQ\",\n    authDomain: \"todo-app-d5e55.firebaseapp.com\",\n    projectId: \"todo-app-d5e55\",\n    storageBucket: \"todo-app-d5e55.appspot.com\",\n    messagingSenderId: \"311866394206\",\n    appId: \"1:311866394206:web:ea3ff1342910a74b15d6cf\"\n})\n\nexport const auth = firebase.auth()\nexport const firestore = firebase.firestore()\nexport const functions = firebase.functions()\n\nexport default firebase","import { useState } from 'react'\nimport { auth, firestore } from \"./firebase\";\nimport firebase from 'firebase'\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport { styled } from '@material-ui/core/styles';\nimport './App.css'\n\n\nconst DetailButton = styled(Button)({\n    background: 'linear-gradient(315deg, #3bb78f 0%, #0bab64 74%)'\n})\n\nconst Todos = () => {\n    const [todo, setTodo] = useState(\"\")\n    const todosRef = firestore.collection(`users/${auth.currentUser.uid}/todos`)\n    const [todos] = useCollectionData(todosRef.orderBy(\"createdAt\", \"desc\"), {idField: \"id\"})\n\n    const signOut = () => auth.signOut()\n\n    const onSubmitTodo = (evt) => {\n        evt.preventDefault()\n\n        setTodo(\"\")\n        todosRef.add({\n            text: todo,\n            complete: false,\n            createdAt: firebase.firestore.FieldValue.serverTimestamp()\n        })\n    }\n\n    return (\n        <>\n            <header id=\"signoutbox\">\n                <Button variant=\"contained\" size=\"large\" color=\"primary\" onClick={signOut}><strong>Sign Out</strong></Button>\n            </header>\n            <main id=\"todolist\">\n                <h1 className=\"text-center\"><strong>Your Task List</strong></h1>\n                <form onSubmit={onSubmitTodo}>\n                    <div id=\"newtodoform\" className=\"my-5\">\n                        <TextField className=\"todoinput\" required value={todo} onChange={(evt) => setTodo(evt.target.value)} id=\"title\" label=\"Enter A New Todo\" type=\"text\"/>\n                        <DetailButton className=\"submitbutton ml-3\" type=\"submit\" variant=\"contained\" size=\"large\" color=\"primary\"><strong>Add</strong></DetailButton>\n                    </div>\n                </form>\n\n                {todos && todos.map((todo) => <Todo {...todo}/>)}\n            </main>\n        </>\n    )\n}\n\n\nconst Todo = ({ id, complete, text }) => {\n    const todosRef = firestore.collection(`users/${auth.currentUser.uid}/todos`)\n    const onCompleteTodo = (id, complete) => todosRef.doc(id).set({ complete: !complete }, { merge: true })\n  \n    const onDeleteTodo = (id) => todosRef.doc(id).delete()\n  \n    return (\n      <div key={id} className=\"todoli mx-auto py-3 px-3 h5\">\n          <span id=\"todolitext\" className={`${complete ? \"complete\" : \"\"}`} onClick={() => onCompleteTodo(id, complete)}><strong>{text}</strong></span>\n          <span id=\"todolidelete\" onClick={() => onDeleteTodo(id)}><strong>X</strong></span>\n      </div>\n    )\n}\n  \nexport default Todos","import Todos from './todos'\nimport { useAuthState } from 'react-firebase-hooks/auth'\nimport { auth } from './firebase'\nimport firebase from 'firebase'\nimport Button from '@material-ui/core/Button'\nimport './App.css'\n\nconst googleSignIn = () => auth.signInWithPopup(new firebase.auth.GoogleAuthProvider())\n\nconst SignIn = () => (\n\t<main id=\"mainbox\">\n\t\t<div id=\"signinbox\">\n\t\t\t<h1 className=\"text-center\"><strong>ReflxzR's Todo App</strong></h1>\n\t\t\t<span><Button variant=\"contained\" size=\"large\" color=\"secondary\" onClick={googleSignIn}><strong>Sign in with Google</strong></Button></span>\n\t\t</div>\n\t</main>\n)\n\nconst App = () => {\n\tconst [user] = useAuthState(auth)\n\n\treturn user ? <Todos /> : <SignIn />\n}\n\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}